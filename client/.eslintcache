[{"E:\\Projects\\MarketPlace App\\client\\src\\index.js":"1","E:\\Projects\\MarketPlace App\\client\\src\\App.js":"2","E:\\Projects\\MarketPlace App\\client\\src\\reportWebVitals.js":"3","E:\\Projects\\MarketPlace App\\client\\src\\reducers\\index.js":"4","E:\\Projects\\MarketPlace App\\client\\src\\components\\TopNav.js":"5","E:\\Projects\\MarketPlace App\\client\\src\\components\\PrivateRoute.js":"6","E:\\Projects\\MarketPlace App\\client\\src\\auth\\Login.js":"7","E:\\Projects\\MarketPlace App\\client\\src\\booking\\Home.js":"8","E:\\Projects\\MarketPlace App\\client\\src\\hotels\\ViewHotel.js":"9","E:\\Projects\\MarketPlace App\\client\\src\\hotels\\NewHotel.js":"10","E:\\Projects\\MarketPlace App\\client\\src\\auth\\Register.js":"11","E:\\Projects\\MarketPlace App\\client\\src\\hotels\\EditHotel.js":"12","E:\\Projects\\MarketPlace App\\client\\src\\hotels\\SearchResult.js":"13","E:\\Projects\\MarketPlace App\\client\\src\\stripe\\StripeCancel.js":"14","E:\\Projects\\MarketPlace App\\client\\src\\stripe\\StripeCallback.js":"15","E:\\Projects\\MarketPlace App\\client\\src\\user\\DashboardSeller.js":"16","E:\\Projects\\MarketPlace App\\client\\src\\stripe\\StripeSuccess.js":"17","E:\\Projects\\MarketPlace App\\client\\src\\user\\Dashboard.js":"18","E:\\Projects\\MarketPlace App\\client\\src\\reducers\\auth.js":"19","E:\\Projects\\MarketPlace App\\client\\src\\components\\RegisterForm.js":"20","E:\\Projects\\MarketPlace App\\client\\src\\components\\LoginForm.js":"21","E:\\Projects\\MarketPlace App\\client\\src\\components\\DashboardNav.js":"22","E:\\Projects\\MarketPlace App\\client\\src\\components\\ConnectNav.js":"23","E:\\Projects\\MarketPlace App\\client\\src\\actions\\auth.js":"24","E:\\Projects\\MarketPlace App\\client\\src\\actions\\stripe.js":"25","E:\\Projects\\MarketPlace App\\client\\src\\actions\\hotel.js":"26","E:\\Projects\\MarketPlace App\\client\\src\\components\\cards\\SmallCard.js":"27","E:\\Projects\\MarketPlace App\\client\\src\\components\\cards\\BookingCard.js":"28","E:\\Projects\\MarketPlace App\\client\\src\\components\\forms\\Search.js":"29","E:\\Projects\\MarketPlace App\\client\\src\\components\\forms\\HotelCreateForm.js":"30","E:\\Projects\\MarketPlace App\\client\\src\\components\\forms\\HotelEditForm.js":"31","E:\\Projects\\MarketPlace App\\client\\src\\components\\modals\\OrderModal.js":"32"},{"size":997,"mtime":1609665780000,"results":"33","hashOfConfig":"34"},{"size":2254,"mtime":1611617681000,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1609414014000,"results":"36","hashOfConfig":"34"},{"size":172,"mtime":1609622199000,"results":"37","hashOfConfig":"34"},{"size":1145,"mtime":1610154416000,"results":"38","hashOfConfig":"34"},{"size":307,"mtime":1609640252000,"results":"39","hashOfConfig":"34"},{"size":1689,"mtime":1609640297000,"results":"40","hashOfConfig":"34"},{"size":869,"mtime":1611617108000,"results":"41","hashOfConfig":"34"},{"size":3398,"mtime":1611583737000,"results":"42","hashOfConfig":"34"},{"size":3002,"mtime":1658147327786,"results":"43","hashOfConfig":"34"},{"size":1396,"mtime":1609583146000,"results":"44","hashOfConfig":"34"},{"size":2959,"mtime":1611226115000,"results":"45","hashOfConfig":"34"},{"size":1269,"mtime":1611620079000,"results":"46","hashOfConfig":"34"},{"size":262,"mtime":1611432674000,"results":"47","hashOfConfig":"34"},{"size":1321,"mtime":1657974603914,"results":"48","hashOfConfig":"34"},{"size":3464,"mtime":1610876865000,"results":"49","hashOfConfig":"34"},{"size":1025,"mtime":1611574357000,"results":"50","hashOfConfig":"34"},{"size":1519,"mtime":1611579350000,"results":"51","hashOfConfig":"34"},{"size":406,"mtime":1609622687000,"results":"52","hashOfConfig":"34"},{"size":1188,"mtime":1609584307000,"results":"53","hashOfConfig":"34"},{"size":871,"mtime":1609584266000,"results":"54","hashOfConfig":"34"},{"size":659,"mtime":1609641922000,"results":"55","hashOfConfig":"34"},{"size":2251,"mtime":1610368493000,"results":"56","hashOfConfig":"34"},{"size":750,"mtime":1657973824455,"results":"57","hashOfConfig":"34"},{"size":1536,"mtime":1611568384000,"results":"58","hashOfConfig":"34"},{"size":1880,"mtime":1658147501413,"results":"59","hashOfConfig":"34"},{"size":2885,"mtime":1658176701246,"results":"60","hashOfConfig":"34"},{"size":2848,"mtime":1611580483000,"results":"61","hashOfConfig":"34"},{"size":1878,"mtime":1611617265000,"results":"62","hashOfConfig":"34"},{"size":3520,"mtime":1658146007424,"results":"63","hashOfConfig":"34"},{"size":3167,"mtime":1611052955000,"results":"64","hashOfConfig":"34"},{"size":607,"mtime":1611580948000,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"wzlhid",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\MarketPlace App\\client\\src\\index.js",[],["145","146"],"E:\\Projects\\MarketPlace App\\client\\src\\App.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\reportWebVitals.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\reducers\\index.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\components\\TopNav.js",["147"],"import { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst TopNav = () => {\n  const dispatch = useDispatch();\n  const { auth } = useSelector((state) => ({ ...state }));\n  const history = useHistory();\n\n  const logout = () => {\n    dispatch({\n      type: \"LOGOUT\",\n      payload: null,\n    });\n    window.localStorage.removeItem(\"auth\");\n    history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"nav bg-light d-flex justify-content-between\">\n      <Link className=\"nav-link\" to=\"/\">\n        Home\n      </Link>\n\n      {auth !== null && (\n        <Link className=\"nav-link\" to=\"/dashboard\">\n          Dashboard\n        </Link>\n      )}\n\n      {auth !== null && (\n        <a className=\"nav-link pointer\" href=\"#\" onClick={logout}>\n          Logout\n        </a>\n      )}\n\n      {auth === null && (\n        <>\n          <Link className=\"nav-link\" to=\"/login\">\n            Login\n          </Link>\n          <Link className=\"nav-link\" to=\"/register\">\n            Register\n          </Link>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TopNav;\n","E:\\Projects\\MarketPlace App\\client\\src\\components\\PrivateRoute.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\auth\\Login.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\booking\\Home.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\hotels\\ViewHotel.js",["148","149","150"],"import React, { useState, useEffect } from \"react\";\nimport { useStore } from \"react-redux\";\nimport { read, diffDays, isAlreadyBooked } from \"../actions/hotel\";\nimport { getSessionId } from \"../actions/stripe\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst ViewHotel = ({ match, history }) => {\n  const [hotel, setHotel] = useState({});\n  const [image, setImage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [alreadyBooked, setAlreadyBooked] = useState(false);\n\n  const { auth } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadSellerHotel();\n  }, []);\n\n  useEffect(() => {\n    if (auth && auth.token) {\n      isAlreadyBooked(auth.token, match.params.hotelId).then((res) => {\n        // console.log(res);\n        if (res.data.ok) setAlreadyBooked(true);\n      });\n    }\n  }, []);\n\n  const loadSellerHotel = async () => {\n    let res = await read(match.params.hotelId);\n    // console.log(res);\n    setHotel(res.data);\n    setImage(`${process.env.REACT_APP_API}/hotel/image/${res.data._id}`);\n  };\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n\n    if (!auth || !auth.token) {\n      history.push(\"/login\");\n      return;\n    }\n\n    setLoading(true);\n    if (!auth) history.push(\"/login\");\n    // console.log(auth.token, match.params.hotelId);\n    let res = await getSessionId(auth.token, match.params.hotelId);\n    // console.log(\"get sessionid resposne\", res.data.sessionId);\n    const stripe = await loadStripe(process.env.REACT_APP_STRIPE_KEY);\n    stripe\n      .redirectToCheckout({\n        sessionId: res.data.sessionId,\n      })\n      .then((result) => console.log(result));\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h1>{hotel.title}</h1>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <br />\n            <img src={image} alt={hotel.title} className=\"img img-fluid m-2\" />\n          </div>\n\n          <div className=\"col-md-6\">\n            <br />\n            <b>{hotel.content}</b>\n            <p className=\"alert alert-info mt-3\">${hotel.price}</p>\n            <p className=\"card-text\">\n              <span className=\"float-right text-primary\">\n                for {diffDays(hotel.from, hotel.to)}{\" \"}\n                {diffDays(hotel.from, hotel.to) <= 1 ? \" day\" : \" days\"}\n              </span>\n            </p>\n            <p>\n              From <br />{\" \"}\n              {moment(new Date(hotel.from)).format(\"MMMM Do YYYY, h:mm:ss a\")}\n            </p>\n            <p>\n              To <br />{\" \"}\n              {moment(new Date(hotel.to)).format(\"MMMM Do YYYY, h:mm:ss a\")}\n            </p>\n            <i>Posted by {hotel.postedBy && hotel.postedBy.name}</i>\n            <br />\n            <button\n              onClick={handleClick}\n              className=\"btn btn-block btn-lg btn-primary mt-3\"\n              disabled={loading || alreadyBooked}\n            >\n              {loading\n                ? \"Loading...\"\n                : alreadyBooked\n                ? \"Already Booked\"\n                : auth && auth.token\n                ? \"Book Now\"\n                : \"Login to Book\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewHotel;\n","E:\\Projects\\MarketPlace App\\client\\src\\hotels\\NewHotel.js",["151","152"],"import { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { DatePicker, Select } from \"antd\";\nimport { createHotel } from \"../actions/hotel\";\nimport { useSelector } from \"react-redux\";\nimport HotelCreateForm from \"../components/forms/HotelCreateForm\";\n\nconst { Option } = Select;\n\nconst NewHotel = () => {\n  // redux\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { token } = auth;\n  // state\n  const [values, setValues] = useState({\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    price: \"\",\n    location: \"\",\n    from: \"\",\n    to: \"\",\n    bed: \"\",\n  });\n  const [preview, setPreview] = useState(\n    \"https://via.placeholder.com/100x100.png?text=PREVIEW\"\n  );\n  //const [location, setLocation] = useState(\"\");\n  // destructuring variables from state\n  const { title, content, location, image, price, from, to, bed } = values; //destructure from values\n\n  const handleSubmit = async (e) => { //sending data to backend\n    e.preventDefault();\n    // console.log(values);\n    // console.log(location);\n\n    let hotelData = new FormData();\n    hotelData.append(\"title\", title);\n    hotelData.append(\"content\", content);\n    hotelData.append(\"location\", location);\n    hotelData.append(\"price\", price);\n    image && hotelData.append(\"image\", image);\n    hotelData.append(\"from\", from);\n    hotelData.append(\"to\", to);\n    hotelData.append(\"bed\", bed);\n\n    console.log([...hotelData]);\n\n    try {\n      let res = await createHotel(token, hotelData);\n      console.log(\"HOTEL CREATE RES\", res);\n      toast.success(\"New hotel is posted\");\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    // console.log(e.target.files[0]);\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setValues({ ...values, image: e.target.files[0] });\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h2>Add Hotel</h2>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <br />\n            <HotelCreateForm\n              values={values}\n              setValues={setValues}\n              handleChange={handleChange}\n              handleImageChange={handleImageChange}\n              handleSubmit={handleSubmit}\n              //location={location}\n              //setLocation={setLocation}\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <img\n              src={preview}\n              alt=\"preview_image\"\n              className=\"img img-fluid m-2\"\n            />\n            <pre>{JSON.stringify(values, null, 4)}</pre>\n            {/*JSON.stringify(location)*/}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NewHotel;\n","E:\\Projects\\MarketPlace App\\client\\src\\auth\\Register.js",["153"],"import { useState } from \"react\";\nimport RegisterForm from \"../components/RegisterForm\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { register } from \"../actions/auth\";\n\nconst Register = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await register({\n        name,\n        email,\n        password,\n      });\n      console.log(\"REGISTER USER ===> \", res);\n      toast.success(\"Register success. Please login.\");\n      history.push(\"/login\");\n    } catch (err) {\n      console.log(err);\n      if (err.response.status === 400) toast.error(err.response.data);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h1>Register</h1>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3\">\n            <RegisterForm\n              handleSubmit={handleSubmit}\n              name={name}\n              setName={setName}\n              email={email}\n              setEmail={setEmail}\n              password={password}\n              setPassword={setPassword}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","E:\\Projects\\MarketPlace App\\client\\src\\hotels\\EditHotel.js",["154","155","156"],"import { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { DatePicker, Select } from \"antd\";\nimport { read, updateHotel } from \"../actions/hotel\";\nimport { useSelector } from \"react-redux\";\nimport HotelEditForm from \"../components/forms/HotelEditForm\";\n\nconst { Option } = Select;\n\nconst EditHotel = ({ match }) => {\n  // redux\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { token } = auth;\n  // state\n  const [values, setValues] = useState({\n    title: \"\",\n    content: \"\",\n    location: \"\",\n    price: \"\",\n    from: \"\",\n    to: \"\",\n    bed: \"\",\n  });\n  const [image, setImage] = useState(\"\");\n  const [preview, setPreview] = useState(\n    \"https://via.placeholder.com/100x100.png?text=PREVIEW\"\n  );\n  // destructuring variables from state\n  const { title, content, price, from, to, bed, location } = values;\n\n  useEffect(() => {\n    loadSellerHotel();\n  }, []);\n\n  const loadSellerHotel = async () => {\n    let res = await read(match.params.hotelId);\n    // console.log(res);\n    setValues({ ...values, ...res.data });\n    setPreview(`${process.env.REACT_APP_API}/hotel/image/${res.data._id}`);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let hotelData = new FormData();\n    hotelData.append(\"title\", title);\n    hotelData.append(\"content\", content);\n    hotelData.append(\"location\", location);\n    hotelData.append(\"price\", price);\n    image && hotelData.append(\"image\", image);\n    hotelData.append(\"from\", from);\n    hotelData.append(\"to\", to);\n    hotelData.append(\"bed\", bed);\n\n    try {\n      let res = await updateHotel(token, hotelData, match.params.hotelId);\n      console.log(\"HOTEL UPDATE RES\", res);\n      toast.success(`${res.data.title} is updated`);\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.err);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    // console.log(e.target.files[0]);\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setImage(e.target.files[0]);\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h2>Edit Hotel</h2>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <br />\n            <HotelEditForm\n              values={values}\n              setValues={setValues}\n              handleChange={handleChange}\n              handleImageChange={handleImageChange}\n              handleSubmit={handleSubmit}\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <img\n              src={preview}\n              alt=\"preview_image\"\n              className=\"img img-fluid m-2\"\n            />\n            <pre>{JSON.stringify(values, null, 4)}</pre>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditHotel;\n","E:\\Projects\\MarketPlace App\\client\\src\\hotels\\SearchResult.js",["157","158","159","160","161","162","163","164"],"import { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"../components/forms/Search\";\nimport { searchListings } from \"../actions/hotel\";\nimport SmallCard from \"../components/cards/SmallCard\";\n\nconst SearchResult = () => {\n  // state\n  const [searchLocation, setSearchLocation] = useState(\"\");\n  const [searchDate, setSearchDate] = useState(\"\");\n  const [searchBed, setSearchBed] = useState(\"\");\n  const [hotels, setHotels] = useState([]);\n  // when component mounts, get search params from url and use to send search query to backend\n  useEffect(() => {\n    const { location, date, bed } = queryString.parse(window.location.search);\n    // console.table({ location, date, bed });\n    searchListings({ location, date, bed }).then((res) => {\n      console.log(\"SEARCH RESULTS ===>\", res.data);\n      setHotels(res.data);\n    });\n  }, [window.location.search]);\n\n  return (\n    <>\n      <div className=\"col\">\n        <br />\n        <Search />\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          {hotels.map((h) => (\n            <SmallCard key={h._id} h={h} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchResult;\n","E:\\Projects\\MarketPlace App\\client\\src\\stripe\\StripeCancel.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\stripe\\StripeCallback.js",["165"],"import { useEffect } from \"react\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAccountStatus } from \"../actions/stripe\";\nimport { updateUserInLocalStorage } from \"../actions/auth\";\n\nconst StripeCallback = ({ history }) => {\n  const { auth } = useSelector((state) => ({ ...state }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (auth && auth.token) accountStatus();\n  }, [auth]); //this function runs when the component mounts and when the auth state changes\n\n  const accountStatus = async () => { //this function will make request to backend\n    try {\n      const res = await getAccountStatus(auth.token);\n      // console.log(\"USER ACCOUNT STATUS ON STRIPE CALLBACK\", res);\n      // update user in local storage\n      updateUserInLocalStorage(res.data, () => {\n        // update user in redux\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: res.data,\n        });\n        // redirect user to dashboard\n        window.location.href = \"/dashboard/seller\";\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center p-5\">\n      <LoadingOutlined className=\"display-1 p-5 text-danger\" />\n    </div>\n  );\n};\n\nexport default StripeCallback;\n","E:\\Projects\\MarketPlace App\\client\\src\\user\\DashboardSeller.js",["166"],"import { useState, useEffect } from \"react\";\nimport DashboardNav from \"../components/DashboardNav\";\nimport ConnectNav from \"../components/ConnectNav\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { HomeOutlined } from \"@ant-design/icons\";\nimport { createConnectAccount } from \"../actions/stripe\";\nimport { sellerHotels, deleteHotel } from \"../actions/hotel\";\nimport { toast } from \"react-toastify\";\nimport SmallCard from \"../components/cards/SmallCard\";\n\nconst DashboardSeller = () => {\n  const { auth } = useSelector((state) => ({ ...state }));\n  const [hotels, setHotels] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadSellersHotels();\n  }, []);\n\n  const loadSellersHotels = async () => {\n    let { data } = await sellerHotels(auth.token);\n    setHotels(data);\n  };\n\n  const handleClick = async () => {\n    setLoading(true);\n    try {\n      let res = await createConnectAccount(auth.token);\n      console.log(res); // get login link\n      window.location.href = res.data;\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Stripe connect failed, Try again.\");\n      setLoading(false);\n    }\n  };\n\n  const handleHotelDelete = async (hotelId) => {\n    if (!window.confirm(\"Are you sure?\")) return;\n    deleteHotel(auth.token, hotelId).then((res) => {\n      toast.success(\"Hotel Deleted\");\n      loadSellersHotels();\n    });\n  };\n\n  const connected = () => (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-10\">\n          <h2>Your Hotels</h2>\n        </div>\n        <div className=\"col-md-2\">\n          <Link to=\"/hotels/new\" className=\"btn btn-primary\">\n            + Add New\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        {hotels.map((h) => (\n          <SmallCard\n            key={h._id}\n            h={h}\n            showViewMoreButton={false}\n            owner={true}\n            handleHotelDelete={handleHotelDelete}\n          />\n        ))}\n      </div>\n    </div>\n  );\n\n  const notConnected = () => (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 text-center\">\n          <div className=\"p-5 pointer\">\n            <HomeOutlined className=\"h1\" />\n            <h4>Setup payouts to post hotel rooms</h4>\n            <p className=\"lead\">\n              MERN partners with stripe to transfer earnings to your bank\n              account\n            </p>\n            <button\n              disabled={loading}\n              onClick={handleClick}\n              className=\"btn btn-primary mb-3\"\n            >\n              {loading ? \"Processing...\" : \"Setup Payouts\"}\n            </button>\n            <p className=\"text-muted\">\n              <small>\n                You'll be redirected to Stripe to complete the onboarding\n                process.\n              </small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5\">\n        <ConnectNav />\n      </div>\n\n      <div className=\"container-fluid p-4\">\n        <DashboardNav />\n      </div>\n\n      {auth &&\n      auth.user &&\n      auth.user.stripe_seller &&\n      auth.user.stripe_seller.charges_enabled\n        ? connected()\n        : notConnected()}\n\n      {/* <pre>{JSON.stringify(auth, null, 4)}</pre> */}\n    </>\n  );\n};\n\nexport default DashboardSeller;\n","E:\\Projects\\MarketPlace App\\client\\src\\stripe\\StripeSuccess.js",["167","168"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { stripeSuccessRequest } from \"../actions/stripe\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nconst StripeCancel = ({ match, history }) => {\n  const {\n    auth: { token },\n  } = useSelector((state) => ({ ...state }));\n  // const { token } = auth;\n\n  useEffect(() => {\n    // console.log(\n    //   \"send this hotelid to backend to crate order\",\n    //   match.params.hotelId\n    // );\n    stripeSuccessRequest(token, match.params.hotelId).then((res) => {\n      if (res.data.success) {\n        // console.log(\"stripe success response\", res.data);\n        history.push(\"/dashboard\");\n      } else {\n        history.push(\"/stripe/cancel\");\n      }\n    });\n  }, [match.params.hotelId]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex justify-content-center p-5\">\n        <LoadingOutlined className=\"display-1 text-danger p-5\" />\n      </div>\n    </div>\n  );\n};\n\nexport default StripeCancel;\n","E:\\Projects\\MarketPlace App\\client\\src\\user\\Dashboard.js",["169"],"import DashboardNav from \"../components/DashboardNav\";\nimport ConnectNav from \"../components/ConnectNav\";\nimport { Link } from \"react-router-dom\";\nimport { userHotelBookings } from \"../actions/hotel\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport BookingCard from \"../components/cards/BookingCard\";\n\nconst Dashboard = () => {\n  const {\n    auth: { token },\n  } = useSelector((state) => ({ ...state }));\n  const [booking, setBooking] = useState([]);\n\n  useEffect(() => {\n    loadUserBookings();\n  }, []);\n\n  const loadUserBookings = async () => {\n    const res = await userHotelBookings(token);\n    console.log(res);\n    setBooking(res.data);\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5\">\n        <ConnectNav />\n      </div>\n\n      <div className=\"container-fluid p-4\">\n        <DashboardNav />\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <h2>Your Bookings</h2>\n          </div>\n          <div className=\"col-md-2\">\n            <Link to=\"/\" className=\"btn btn-primary\">\n              Browse Hotels\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        {booking.map((b) => (\n          <BookingCard\n            key={b._id}\n            hotel={b.hotel}\n            session={b.session}\n            orderedBy={b.orderedBy}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","E:\\Projects\\MarketPlace App\\client\\src\\reducers\\auth.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\components\\RegisterForm.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\components\\LoginForm.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\components\\DashboardNav.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\components\\ConnectNav.js",["170","171"],"import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Avatar, Badge } from \"antd\";\nimport moment from \"moment\";\nimport {\n  getAccountBalance,\n  currencyFormatter,\n  payoutSetting,\n} from \"../actions/stripe\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { toast } from \"react-toastify\";\n\nconst { Meta } = Card;\nconst { Ribbon } = Badge;\n\nconst ConnectNav = () => {\n  const [loading, setLoading] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { user, token } = auth;\n\n  useEffect(() => {\n    getAccountBalance(auth.token).then((res) => {\n      // console.log(res);\n      setBalance(res.data);\n    });\n  }, []);\n\n  const handlePayoutSettings = async () => {\n    setLoading(true);\n    try {\n      const res = await payoutSetting(token);\n      // console.log(\"RES FOR PAYOUT SETTING LINK\", res);\n      window.location.href = res.data.url;\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n      toast(\"Unable to access settings. Try again\");\n    }\n  };\n\n  return (\n    <div className=\"d-flex justify-content-around\">\n      <Card>\n        <Meta\n          avatar={<Avatar>{user.name[0]}</Avatar>}\n          title={user.name}\n          description={`Joined ${moment(user.createdAt).fromNow()}`}\n        />\n      </Card>\n      {auth &&\n        auth.user &&\n        auth.user.stripe_seller &&\n        auth.user.stripe_seller.charges_enabled && (\n          <>\n            <Ribbon text=\"Avaliable\" color=\"grey\">\n              <Card className=\"bg-light pt-1\">\n                {balance &&\n                  balance.pending &&\n                  balance.pending.map((bp, i) => (\n                    <span key={i} className=\"lead\">\n                      {currencyFormatter(bp)}\n                    </span>\n                  ))}\n              </Card>\n            </Ribbon>\n            <Ribbon text=\"Payouts\" color=\"silver\">\n              <Card onClick={handlePayoutSettings} className=\"bg-light pointer\">\n                <SettingOutlined className=\"h5 pt-2\" />\n              </Card>\n            </Ribbon>\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default ConnectNav;\n","E:\\Projects\\MarketPlace App\\client\\src\\actions\\auth.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\actions\\stripe.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\actions\\hotel.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\components\\cards\\SmallCard.js",["172","173"],"import { currencyFormatter } from \"../../actions/stripe\";\nimport { diffDays } from \"../../actions/hotel\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nconst SmallCard = ({\n  h,\n  handleHotelDelete = (f) => f,\n  owner = false,\n  showViewMoreButton = true,\n}) => {\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"card mb-3\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n            {h.image && h.image.contentType ? (\n              <img\n                src={`${process.env.REACT_APP_API}/hotel/image/${h._id}`}\n                alt=\"default hotel image\"\n                className=\"card-image img img-fluid\"\n              />\n            ) : (\n              <img\n                src=\"https://via.placeholder.com/900x500.png?text=MERN+Booking\"\n                alt=\"default hotel image\"\n                className=\"card-image img img-fluid\"\n              />\n            )}\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">\n                {h.title}{\" \"}\n                <span className=\"float-right text-primary\">\n                  {currencyFormatter({\n                    amount: h.price * 100,\n                    currency: \"usd\",\n                  })}\n                </span>{\" \"}\n              </h3>\n              <p className=\"alert alert-info\">{h.location}</p>\n              <p className=\"card-text\">{`${h.content.substring(1, 200)}...`}</p>\n              <p className=\"card-text\">\n                <span className=\"float-right text-primary\">\n                  for {diffDays(h.from, h.to)}{\" \"}\n                  {diffDays(h.from, h.to) <= 1 ? \" day\" : \" days\"}\n                </span>\n              </p>\n              <p className=\"card-text\">{h.bed} bed</p>\n              <p className=\"card-text\">\n                Available from {new Date(h.from).toLocaleDateString()}\n              </p>\n\n              <div className=\"d-flex justify-content-between h4\">\n                {showViewMoreButton && (\n                  <button\n                    onClick={() => history.push(`/hotel/${h._id}`)}\n                    className=\"btn btn-primary\"\n                  >\n                    Show more\n                  </button>\n                )}\n                {owner && (\n                  <>\n                    <Link to={`/hotel/edit/${h._id}`}>\n                      <EditOutlined className=\"text-warning\" />\n                    </Link>\n                    <DeleteOutlined\n                      onClick={() => handleHotelDelete(h._id)}\n                      className=\"text-danger\"\n                    />\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SmallCard;\n","E:\\Projects\\MarketPlace App\\client\\src\\components\\cards\\BookingCard.js",["174","175","176","177","178","179"],"import { useState } from \"react\";\nimport { currencyFormatter } from \"../../actions/stripe\";\nimport { diffDays } from \"../../actions/hotel\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport OrderModal from \"../modals/OrderModal\";\n\nconst BookingCard = ({ hotel, session, orderedBy }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"card mb-3\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n            {hotel.image && hotel.image.contentType ? (\n              <img\n                src={`${process.env.REACT_APP_API}/hotel/image/${hotel._id}`}\n                alt=\"default hotel image\"\n                className=\"card-image img img-fluid\"\n              />\n            ) : (\n              <img\n                src=\"https://via.placeholder.com/900x500.png?text=MERN+Booking\"\n                alt=\"default hotel image\"\n                className=\"card-image img img-fluid\"\n              />\n            )}\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">\n                {hotel.title}{\" \"}\n                <span className=\"float-right text-primary\">\n                  {currencyFormatter({\n                    amount: hotel.price * 100,\n                    currency: \"usd\",\n                  })}\n                </span>{\" \"}\n              </h3>\n              <p className=\"alert alert-info\">{hotel.location}</p>\n              <p className=\"card-text\">{`${hotel.content.substring(\n                1,\n                200\n              )}...`}</p>\n              <p className=\"card-text\">\n                <span className=\"float-right text-primary\">\n                  for {diffDays(hotel.from, hotel.to)}{\" \"}\n                  {diffDays(hotel.from, hotel.to) <= 1 ? \" day\" : \" days\"}\n                </span>\n              </p>\n              <p className=\"card-text\">{hotel.bed} bed</p>\n              <p className=\"card-text\">\n                Available from {new Date(hotel.from).toLocaleDateString()}\n              </p>\n\n              {showModal && (\n                <OrderModal\n                  session={session}\n                  orderedBy={orderedBy}\n                  showModal={showModal}\n                  setShowModal={setShowModal}\n                />\n              )}\n\n              <div className=\"d-flex justify-content-between h4\">\n                <button\n                  onClick={() => setShowModal(!showModal)}\n                  className=\"btn btn-primary\"\n                >\n                  Show Payment info\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BookingCard;\n","E:\\Projects\\MarketPlace App\\client\\src\\components\\forms\\Search.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\components\\forms\\HotelCreateForm.js",["180","181","182","183"],"import AlgoliaPlaces from \"algolia-places-react\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport MapboxAutocomplete from \"react-mapbox-autocomplete\";\nimport { DatePicker, Select } from \"antd\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\n\n// const config = {\n  // appId: process.env.REACT_APP_ALGOLIA_APP_ID,\n  // apiKey: process.env.REACT_APP_ALGOLIA_API_KEY,\n  // language: \"en\",\n  // // countries: [\"au\"],\n// };\n\nconst config = process.env.REACT_APP_GOOGLEPLACES_API_KEY;\n\nconst HotelCreateForm = ({\n  values,\n  setValues,\n  handleChange,\n  handleImageChange,\n  handleSubmit,\n  location,\n  setLocation,\n}) => {\n  const { title, content, price } = values;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"btn btn-outline-secondary btn-block m-2 text-left\">\n          Image\n          <input\n            type=\"file\"\n            name=\"image\"\n            onChange={handleImageChange}\n            accept=\"image/*\"\n            hidden\n          />\n        </label>\n\n        <input\n          type=\"text\"\n          name=\"title\"\n          onChange={handleChange}\n          placeholder=\"Title\"\n          className=\"form-control m-2\"\n          value={title}\n        />\n\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          placeholder=\"Content\"\n          className=\"form-control m-2\"\n          value={content}\n        />\n\n        {/*<AlgoliaPlaces\n          className=\"form-control m-2\"\n          placeholder=\"Location\"\n          defaultValue={location}\n          options={config}\n          onChange={({ suggestion }) => setLocation(suggestion.value)}\n          style={{ height: \"50px\" }}\n  />*/}\n\n        {/*<Autocomplete\n          className=\"form-control m-2\"\n          placeholder=\"Location\"\n          apiKey={config}\n          onPlaceSelected={(place) => {\n            setLocation(place.formatted_address);\n          }}\n          style={{ height: \"50px\" }}\n        />*/}\n\n        <textarea\n          name=\"location\"\n          onChange={handleChange}\n          placeholder=\"Location\"\n          className=\"form-control m-2\"\n          value={location}\n        />\n\n        <input\n          type=\"number\"\n          name=\"price\"\n          onChange={handleChange}\n          placeholder=\"Price\"\n          className=\"form-control m-2\"\n          value={price}\n        />\n\n        <Select\n          onChange={(value) => setValues({ ...values, bed: value })}\n          className=\"w-100 m-2\"\n          size=\"large\"\n          placeholder=\"Number of beds\"\n        >\n          <Option key={1}>{1}</Option>\n          <Option key={2}>{2}</Option>\n          <Option key={3}>{3}</Option>\n          <Option key={4}>{4}</Option>\n        </Select>\n      </div>\n\n      <DatePicker\n        placeholder=\"From date\"\n        className=\"form-control m-2\"\n        onChange={(date, dateString) =>\n          setValues({ ...values, from: dateString })\n        }\n        disabledDate={(current) =>\n          current && current.valueOf() < moment().subtract(1, \"days\")\n        } //disable past dates\n      />\n\n      <DatePicker\n        placeholder=\"To date\"\n        className=\"form-control m-2\"\n        onChange={(date, dateString) =>\n          setValues({ ...values, to: dateString })\n        }\n        disabledDate={(current) =>\n          current && current.valueOf() < moment().subtract(1, \"days\")\n        }\n      />\n\n      <button className=\"btn btn-outline-primary m-2\">Save</button>\n    </form>\n  );\n};\n\nexport default HotelCreateForm;\n","E:\\Projects\\MarketPlace App\\client\\src\\components\\forms\\HotelEditForm.js",[],"E:\\Projects\\MarketPlace App\\client\\src\\components\\modals\\OrderModal.js",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":32,"column":9,"nodeType":"190","endLine":32,"endColumn":67},{"ruleId":"191","severity":1,"message":"192","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":19,"column":6,"nodeType":"197","endLine":19,"endColumn":8,"suggestions":"198"},{"ruleId":"195","severity":1,"message":"199","line":28,"column":6,"nodeType":"197","endLine":28,"endColumn":8,"suggestions":"200"},{"ruleId":"191","severity":1,"message":"201","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":20},{"ruleId":"191","severity":1,"message":"202","line":8,"column":9,"nodeType":"193","messageId":"194","endLine":8,"endColumn":15},{"ruleId":"191","severity":1,"message":"203","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":13},{"ruleId":"191","severity":1,"message":"201","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":20},{"ruleId":"191","severity":1,"message":"202","line":8,"column":9,"nodeType":"193","messageId":"194","endLine":8,"endColumn":15},{"ruleId":"195","severity":1,"message":"196","line":33,"column":6,"nodeType":"197","endLine":33,"endColumn":8,"suggestions":"204"},{"ruleId":"191","severity":1,"message":"205","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"191","severity":1,"message":"206","line":10,"column":10,"nodeType":"193","messageId":"194","endLine":10,"endColumn":24},{"ruleId":"191","severity":1,"message":"207","line":10,"column":26,"nodeType":"193","messageId":"194","endLine":10,"endColumn":43},{"ruleId":"191","severity":1,"message":"208","line":11,"column":10,"nodeType":"193","messageId":"194","endLine":11,"endColumn":20},{"ruleId":"191","severity":1,"message":"209","line":11,"column":22,"nodeType":"193","messageId":"194","endLine":11,"endColumn":35},{"ruleId":"191","severity":1,"message":"210","line":12,"column":10,"nodeType":"193","messageId":"194","endLine":12,"endColumn":19},{"ruleId":"191","severity":1,"message":"211","line":12,"column":21,"nodeType":"193","messageId":"194","endLine":12,"endColumn":33},{"ruleId":"195","severity":1,"message":"212","line":22,"column":6,"nodeType":"197","endLine":22,"endColumn":30,"suggestions":"213"},{"ruleId":"195","severity":1,"message":"214","line":13,"column":6,"nodeType":"197","endLine":13,"endColumn":12,"suggestions":"215"},{"ruleId":"195","severity":1,"message":"216","line":19,"column":6,"nodeType":"197","endLine":19,"endColumn":8,"suggestions":"217"},{"ruleId":"191","severity":1,"message":"218","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"219","line":25,"column":6,"nodeType":"197","endLine":25,"endColumn":28,"suggestions":"220"},{"ruleId":"195","severity":1,"message":"221","line":17,"column":6,"nodeType":"197","endLine":17,"endColumn":8,"suggestions":"222"},{"ruleId":"191","severity":1,"message":"223","line":17,"column":10,"nodeType":"193","messageId":"194","endLine":17,"endColumn":17},{"ruleId":"195","severity":1,"message":"224","line":27,"column":6,"nodeType":"197","endLine":27,"endColumn":8,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":19,"column":15,"nodeType":"190","endLine":23,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":25,"column":15,"nodeType":"190","endLine":29,"endColumn":17},{"ruleId":"191","severity":1,"message":"205","line":4,"column":22,"nodeType":"193","messageId":"194","endLine":4,"endColumn":26},{"ruleId":"191","severity":1,"message":"228","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":22},{"ruleId":"191","severity":1,"message":"229","line":5,"column":24,"nodeType":"193","messageId":"194","endLine":5,"endColumn":38},{"ruleId":"191","severity":1,"message":"230","line":11,"column":9,"nodeType":"193","messageId":"194","endLine":11,"endColumn":16},{"ruleId":"226","severity":1,"message":"227","line":18,"column":15,"nodeType":"190","endLine":22,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":24,"column":15,"nodeType":"190","endLine":28,"endColumn":17},{"ruleId":"191","severity":1,"message":"231","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":21},{"ruleId":"191","severity":1,"message":"232","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":20},{"ruleId":"191","severity":1,"message":"233","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":26},{"ruleId":"191","severity":1,"message":"234","line":16,"column":7,"nodeType":"193","messageId":"194","endLine":16,"endColumn":13},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useStore' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadSellerHotel'. Either include it or remove the dependency array.","ArrayExpression",["237"],"React Hook useEffect has missing dependencies: 'auth' and 'match.params.hotelId'. Either include them or remove the dependency array.",["238"],"'DatePicker' is defined but never used.","'Option' is assigned a value but never used.","'axios' is defined but never used.",["239"],"'Link' is defined but never used.","'searchLocation' is assigned a value but never used.","'setSearchLocation' is assigned a value but never used.","'searchDate' is assigned a value but never used.","'setSearchDate' is assigned a value but never used.","'searchBed' is assigned a value but never used.","'setSearchBed' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'window.location.search'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.search' aren't valid dependencies because mutating them doesn't re-render the component.",["240"],"React Hook useEffect has a missing dependency: 'accountStatus'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has a missing dependency: 'loadSellersHotels'. Either include it or remove the dependency array.",["242"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["243"],"React Hook useEffect has a missing dependency: 'loadUserBookings'. Either include it or remove the dependency array.",["244"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["245"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'EditOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'history' is assigned a value but never used.","'AlgoliaPlaces' is defined but never used.","'Autocomplete' is defined but never used.","'MapboxAutocomplete' is defined but never used.","'config' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"246","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [loadSellerHotel]",{"range":"263","text":"264"},"Update the dependencies array to be: [auth, match.params.hotelId]",{"range":"265","text":"266"},{"range":"267","text":"264"},"Update the dependencies array to be: []",{"range":"268","text":"269"},"Update the dependencies array to be: [accountStatus, auth]",{"range":"270","text":"271"},"Update the dependencies array to be: [loadSellersHotels]",{"range":"272","text":"273"},"Update the dependencies array to be: [history, match.params.hotelId, token]",{"range":"274","text":"275"},"Update the dependencies array to be: [loadUserBookings]",{"range":"276","text":"277"},"Update the dependencies array to be: [auth.token]",{"range":"278","text":"279"},[678,680],"[loadSellerHotel]",[905,907],"[auth, match.params.hotelId]",[916,918],[921,945],"[]",[465,471],"[accountStatus, auth]",[736,738],"[loadSellersHotels]",[770,792],"[history, match.params.hotelId, token]",[548,550],"[loadUserBookings]",[752,754],"[auth.token]"]